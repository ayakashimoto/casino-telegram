#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–∑–∏–Ω–æ-–±–æ—Ç–æ–º
"""

import sys
import subprocess
import sqlite3
import os
from dotenv import load_dotenv

load_dotenv()

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import aiogram
        from dotenv import load_dotenv
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        return False

def check_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    bot_token = os.getenv("BOT_TOKEN")
    admin_id = os.getenv("ADMIN_ID")

    if not bot_token or bot_token == "YOUR_BOT_TOKEN_HERE":
        print("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ")
        print("–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram")
        return False

    if not admin_id or admin_id == "123456789":
        print("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω ADMIN_ID –≤ .env —Ñ–∞–π–ª–µ")
        print("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram ID")
        return False

    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    return True

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    from bot import Database
    db = Database()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
    db.create_promo("WELCOME", 1000, 100)
    db.create_promo("LUCKY", 500, 50)
    db.create_promo("BONUS777", 777, 25)
    print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã —Å–æ–∑–¥–∞–Ω—ã")

def show_stats():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    if not os.path.exists('casino.db'):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ —Å–Ω–∞—á–∞–ª–∞.")
        return

    conn = sqlite3.connect('casino.db')
    c = conn.cursor()

    users = c.execute('SELECT COUNT(*) FROM users').fetchone()[0]
    games = c.execute('SELECT COUNT(*) FROM games').fetchone()[0]
    total_bets = c.execute('SELECT SUM(bet) FROM games').fetchone()[0] or 0
    total_wins = c.execute('SELECT SUM(result) FROM games').fetchone()[0] or 0

    print(f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:
üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users}
üéÆ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {games}
üí∏ –û–±—â–∏–µ —Å—Ç–∞–≤–∫–∏: {total_bets}
üèÜ –û–±—â–∏–µ –≤—ã–ø–ª–∞—Ç—ã: {total_wins}
üí∞ –ü—Ä–∏–±—ã–ª—å –∫–∞–∑–∏–Ω–æ: {total_bets - total_wins}
""")

    # –¢–æ–ø –∏–≥—Ä–æ–∫–∏
    top = c.execute('SELECT username, balance FROM users ORDER BY balance DESC LIMIT 5').fetchall()
    print("üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤:")
    for i, (name, balance) in enumerate(top, 1):
        print(f"{i}. {name or '–ê–Ω–æ–Ω–∏–º'}: {balance} –æ—á–∫–æ–≤")

    conn.close()

def backup_database():
    """–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î"""
    if not os.path.exists('casino.db'):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    from datetime import datetime
    backup_name = f"casino_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.db"

    import shutil
    shutil.copy2('casino.db', backup_name)
    print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_name}")

def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    if not check_requirements():
        return

    if not check_config():
        return

    print("üé∞ –ó–∞–ø—É—Å–∫ –∫–∞–∑–∏–Ω–æ-–±–æ—Ç–∞...")
    try:
        subprocess.run([sys.executable, "bot.py"])
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    if len(sys.argv) < 2:
        print("""
üé∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–∑–∏–Ω–æ-–±–æ—Ç–æ–º

–ö–æ–º–∞–Ω–¥—ã:
  run      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
  check    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  init     - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ë–î
  stats    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  backup   - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î

–ü—Ä–∏–º–µ—Ä—ã:
  python run.py run
  python run.py stats
""")
        return

    command = sys.argv[1]

    if command == "run":
        run_bot()
    elif command == "check":
        check_requirements()
        check_config()
    elif command == "init":
        init_database()
    elif command == "stats":
        show_stats()
    elif command == "backup":
        backup_database()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")

if __name__ == "__main__":
    main()
